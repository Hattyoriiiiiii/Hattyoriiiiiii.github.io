<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.4">Jekyll</generator><link href="https://hattyoriiiiiii.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://hattyoriiiiiii.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2024-10-13T13:19:04+00:00</updated><id>https://hattyoriiiiiii.github.io/feed.xml</id><title type="html">Tatsuya Hattori</title><subtitle>This is Tatsuya Hattori&apos;s personal website. </subtitle><entry><title type="html">解析ツールのインストールと実行の仕方</title><link href="https://hattyoriiiiiii.github.io/blog/2022/ClustalW/" rel="alternate" type="text/html" title="解析ツールのインストールと実行の仕方"/><published>2022-10-17T00:00:00+00:00</published><updated>2022-10-17T00:00:00+00:00</updated><id>https://hattyoriiiiiii.github.io/blog/2022/ClustalW</id><content type="html" xml:base="https://hattyoriiiiiii.github.io/blog/2022/ClustalW/"><![CDATA[<p><br/></p> <h3 id="概要">概要</h3> <ul> <li><a href="http://www.clustal.org">ClustalW</a>は、アライメントや系統樹を作製するためのツール。 <ul> <li>サイトにもあるように、実際にClustalを使うときは最新の<code class="language-plaintext highlighter-rouge">Clustal Omega</code>を使うことが望ましい。</li> </ul> </li> <li>Google Colab上で、ClustalWを例として、解析ツールのインストールと実行をする。</li> <li>LinuxやMacでインストールしたい際にも利用する汎用的な方法を説明する。</li> </ul> <p><br/></p> <h3 id="やりたい事">やりたい事</h3> <ul> <li>ClustalWのインストール</li> <li>ClustalWの実行</li> </ul> <p><br/></p> <h3 id="google-colabでclustalw">Google ColabでClustalW</h3> <p><br/></p> <div class="row"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/assets/img/blog/2022/2022-10-19-clustalw_01-480.webp"/> <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/assets/img/blog/2022/2022-10-19-clustalw_01-800.webp"/> <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/assets/img/blog/2022/2022-10-19-clustalw_01-1400.webp"/> <img src="/assets/img/blog/2022/2022-10-19-clustalw_01.png" class="img-fluid rounded z-depth-1" width="auto" height="auto" title="example image" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> こんな感じになればインストール成功 </div> <p><br/></p> <p>次に、各コマンドについて一言。</p> <p>これらのコマンドは、Google Colab以外の環境(LinuxやMac)で<strong>解析ツールをダウンロードする際にも使うので、知っている必要がある</strong>(何回もやってると覚える)。</p> <p><br/></p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>%%bash
</code></pre></div></div> <ul> <li><code class="language-plaintext highlighter-rouge">%%bash</code>は、マジックコマンドという。 <ul> <li>これだけは、Google Colab (Jupyter Notebook)でのみ、利用可能なコマンド。</li> <li><code class="language-plaintext highlighter-rouge">%</code>はラインマジック、<code class="language-plaintext highlighter-rouge">%%</code>はセルマジックという。</li> <li><code class="language-plaintext highlighter-rouge">%%bash</code>を先頭につけたセルは、Bashが書けるようになる。</li> </ul> </li> </ul> <p><br/></p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># 「src」というディレクトリを作成し、移動する</span>
<span class="nb">mkdir</span> <span class="nt">-p</span> /content/src <span class="o">&amp;&amp;</span> <span class="nb">cd</span> <span class="nv">$_</span>
</code></pre></div></div> <ul> <li><code class="language-plaintext highlighter-rouge">mkdir -p &lt;path&gt;</code></li> <li><code class="language-plaintext highlighter-rouge">&amp;&amp;</code> <ul> <li><code class="language-plaintext highlighter-rouge">&lt;command1&gt; &amp;&amp; &lt;command2&gt;</code>でcommand1が成功したらcommand2を実行する、という意味になる。</li> </ul> </li> <li><code class="language-plaintext highlighter-rouge">cd $_</code> <ul> <li>直前に指定したpath(正確には直前に実行したコマンドの最後の引数)を勝手に指定してくれる。</li> <li>ここでは、<code class="language-plaintext highlighter-rouge">/content/src</code>と同じ意味がある。</li> </ul> </li> </ul> <p><br/></p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># ClustalWのダウンロード</span>
wget <span class="nt">-q</span> http://www.clustal.org/download/2.1/clustalw-2.1-linux-x86_64-libcppstatic.tar.gz

<span class="c"># Clustal Omegaのダウンロード (実行しなくて良い)</span>
<span class="c"># wget -q http://www.clustal.org/omega/clustal-omega-1.2.4.tar.gz</span>
</code></pre></div></div> <ul> <li><code class="language-plaintext highlighter-rouge">wget &lt;URL&gt;</code>は、URL先のファイルをダウンロードするコマンド。 <ul> <li><code class="language-plaintext highlighter-rouge">-q</code>(quiet)を付けないと色々出力が出てくる。付けなくても良い。</li> </ul> </li> <li>以下のリンク先から手持ちの端末に合わせたリンクを貼ってダウンロードする。 <ul> <li><a href="http://www.clustal.org/download/current/">http://www.clustal.org/download/current/</a></li> <li>URLの最後が<code class="language-plaintext highlighter-rouge">.tar.gz</code>で終わっているか確認する。</li> </ul> </li> </ul> <p><br/></p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># tarファイルの解凍</span>
<span class="nb">tar</span> <span class="nt">-xvzf</span> clustalw-2.1-linux-x86_64-libcppstatic.tar.gz
</code></pre></div></div> <ul> <li><code class="language-plaintext highlighter-rouge">tar -xvzf</code>は、<code class="language-plaintext highlighter-rouge">.tar.gz</code>ファイルを解凍するコマンド。 <ul> <li>ファイルが解凍されると新しいディレクトリができる。</li> </ul> </li> </ul> <p><br/></p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># シンボリックリンクの作成</span>
<span class="nb">ln</span> <span class="nt">-s</span> /content/src/clustalw-2.1-linux-x86_64-libcppstatic/clustalw2 /usr/local/bin/
</code></pre></div></div> <ul> <li><code class="language-plaintext highlighter-rouge">ln -s</code>は、シンボリックリンクを貼るときに用いるコマンド。 <ul> <li><code class="language-plaintext highlighter-rouge">/usr/local/bin/</code>に<code class="language-plaintext highlighter-rouge">clustalw2</code>というコマンドへのショートカットを置いているイメージ。</li> <li>これを実行することで、どこのディレクトリからも<code class="language-plaintext highlighter-rouge">clustalw2</code>というコマンドだけで実行できるようになる。</li> <li>これをやらない場合、毎回<code class="language-plaintext highlighter-rouge">/content/src/clustalw-2.1-linux-x86_64-libcppstatic/clustalw2</code>(絶対パス)もしくは、相対パスで指定する必要がある。</li> </ul> </li> </ul> <p><br/></p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># インストールが成功しているかを確認</span>
clustalw2 <span class="nt">-HELP</span>

<span class="c"># Clustal Omega (実行しなくて良い)</span>
<span class="c"># clustalo --help</span>
</code></pre></div></div> <ul> <li>大体のツールは、<code class="language-plaintext highlighter-rouge">&lt;command&gt; --help</code>、もしくは、その省略形の<code class="language-plaintext highlighter-rouge">&lt;command&gt; -h</code>で実行できる場合が多い。</li> </ul> <p><br/> <br/></p> <h3 id="clustalwの実行">ClustalWの実行</h3> <p>まずは、最初に<a href="/blog/2022/GoogleColab/">Google Drive</a>に接続しておく。</p> <p><br/></p> <div class="row"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/assets/img/blog/2022/2022-10-19-clustalw_02-480.webp"/> <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/assets/img/blog/2022/2022-10-19-clustalw_02-800.webp"/> <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/assets/img/blog/2022/2022-10-19-clustalw_02-1400.webp"/> <img src="/assets/img/blog/2022/2022-10-19-clustalw_02.png" class="img-fluid rounded z-depth-1" width="auto" height="auto" title="example image" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> こんな感じになれば実行成功 </div> <p><br/></p> <ul> <li><code class="language-plaintext highlighter-rouge">input.txt</code>を用意して、Google Driveのこのnotebookが保存されている位置と同じディレクトリ(<code class="language-plaintext highlighter-rouge">pwd</code>で確認できる)に保存する。</li> <li>中身は以下のような構造のファイル(fasta形式)。</li> </ul> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&gt;Human
ACAGCTTCATCACATCACAT
&gt;Dog
ACGTACTACTGCATACGTACC
&gt;Cat
CTATAAAACGACACCAGA

</code></pre></div></div> <p><br/></p> <p>このnotebook(<code class="language-plaintext highlighter-rouge">clustalw.ipynb</code>)と<code class="language-plaintext highlighter-rouge">input.txt</code>が同じディレクトリに存在することを確認する。</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ll
total 16
<span class="nt">-rw-------</span> 1 root 15803 Oct 19 02:56 clustalw.ipynb
<span class="nt">-rw-------</span> 1 root    79 Oct 13 08:26 input.txt
</code></pre></div></div> <ul> <li><code class="language-plaintext highlighter-rouge">ll</code>は<code class="language-plaintext highlighter-rouge">ls -F -o --color</code>というコマンドが登録されている(<code class="language-plaintext highlighter-rouge">alias</code>コマンドで確認)。</li> <li><code class="language-plaintext highlighter-rouge">ls</code>コマンドは現在いるディレクトリ内以下に存在するファイルやディレクトリを表示する。 <ul> <li><code class="language-plaintext highlighter-rouge">-F</code> <ul> <li>各ファイルやディレクトリの状態がわかる(e.g. <code class="language-plaintext highlighter-rouge">&lt;directory&gt;/</code>)。</li> </ul> </li> <li><code class="language-plaintext highlighter-rouge">-o</code> <ul> <li><code class="language-plaintext highlighter-rouge">ls</code>とは異なり、ファイルを縦方向に表示する。</li> </ul> </li> <li><code class="language-plaintext highlighter-rouge">--color</code> <ul> <li>ファイルの種類によって色分け表示される。</li> </ul> </li> </ul> </li> </ul> <p><br/></p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">!</span>clustalw2 input.txt <span class="nt">-outfile</span><span class="o">=</span>output.txt
</code></pre></div></div> <ul> <li>これを実行すると、<code class="language-plaintext highlighter-rouge">output.txt</code>と<code class="language-plaintext highlighter-rouge">input.dnd</code>という2つのファイルが出てくる。</li> <li><code class="language-plaintext highlighter-rouge">ll</code>コマンドで出力されたか確認。</li> </ul> <p><br/></p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">!</span><span class="nb">head </span>output.txt
</code></pre></div></div> <ul> <li><code class="language-plaintext highlighter-rouge">head</code> <ul> <li>ファイルの先頭10行を表示するコマンド。</li> </ul> </li> </ul>]]></content><author><name>hattyoriiiiiii</name></author><category term="環境構築"/><category term="Colaboratory"/><category term="tips"/><category term="biology"/><summary type="html"><![CDATA[Google Colabを用いて、ClustalWのインストールと実行する]]></summary></entry><entry><title type="html">K-meansクラスタリング</title><link href="https://hattyoriiiiiii.github.io/blog/2022/kmeans/" rel="alternate" type="text/html" title="K-meansクラスタリング"/><published>2022-10-17T00:00:00+00:00</published><updated>2022-10-17T00:00:00+00:00</updated><id>https://hattyoriiiiiii.github.io/blog/2022/kmeans</id><content type="html" xml:base="https://hattyoriiiiiii.github.io/blog/2022/kmeans/"><![CDATA[<p><br/></p> <h3 id="概要">概要</h3> <ul> <li>クラスタリングとは、データをいくつかのグループに分ける教師なし学習</li> <li>K-Meansはその中の1つで、クラスタ中心からの距離をもとにクラスターの分類を行う</li> </ul> <p><br/></p> <h3 id="流れ">流れ</h3> <p><br/></p> <ol> <li>データセットの読み込み</li> <li>データの標準化</li> <li>クラスターの数を決定する</li> <li>クラスタリング</li> </ol> <p><br/></p> <h3 id="google-colabでk-meansクラスタリング">Google Colabでk-meansクラスタリング</h3> <p>必要なモジュール・パッケージをインポートします。</p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="n">pandas</span> <span class="k">as</span> <span class="n">pd</span>
<span class="kn">import</span> <span class="n">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="n">matplotlib.pyplot</span> <span class="k">as</span> <span class="n">plt</span>
<span class="kn">import</span> <span class="n">seaborn</span> <span class="k">as</span> <span class="n">sns</span>

<span class="kn">from</span> <span class="n">sklearn</span> <span class="kn">import</span> <span class="n">preprocessing</span>
<span class="kn">from</span> <span class="n">sklearn.cluster</span> <span class="kn">import</span> <span class="n">KMeans</span>
</code></pre></div></div> <p><br/></p> <p>まずは、データの読み込みと表示を行い、どのようなデータなのかを確認します。 <code class="language-plaintext highlighter-rouge">pandas</code>の<code class="language-plaintext highlighter-rouge">DataFrame</code>というデータ構造で保持します。</p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="nf">read_csv</span><span class="p">(</span><span class="sh">"</span><span class="s">/content/sample_data/california_housing_train.csv</span><span class="sh">"</span><span class="p">)</span>
<span class="n">df</span><span class="p">.</span><span class="nf">head</span><span class="p">()</span>
</code></pre></div></div> <div class="row"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/assets/img/blog/2022/2022-10-26-df_head-480.webp"/> <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/assets/img/blog/2022/2022-10-26-df_head-800.webp"/> <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/assets/img/blog/2022/2022-10-26-df_head-1400.webp"/> <img src="/assets/img/blog/2022/2022-10-26-df_head.png" class="img-fluid rounded z-depth-1" width="auto" height="auto" title="example image" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> データの読み込みと表示 </div> <p><br/></p> <p>簡単にデータの分布を見てみます。<code class="language-plaintext highlighter-rouge">seaborn</code>など可視化用のライブラリを用いた方が綺麗に表示できます。</p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">df</span><span class="p">.</span><span class="nf">hist</span><span class="p">(</span><span class="n">bins</span><span class="o">=</span><span class="mi">50</span><span class="p">,</span> <span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">20</span><span class="p">,</span> <span class="mi">15</span><span class="p">))</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">show</span><span class="p">()</span>
</code></pre></div></div> <div class="row"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/assets/img/blog/2022/2022-10-26-hist-480.webp"/> <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/assets/img/blog/2022/2022-10-26-hist-800.webp"/> <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/assets/img/blog/2022/2022-10-26-hist-1400.webp"/> <img src="/assets/img/blog/2022/2022-10-26-hist.png" class="img-fluid rounded z-depth-1" width="auto" height="auto" title="example image" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> まずは、どういう分布のデータなのかを見る </div> <p><br/></p> <p>次にデータの標準化を行い、各特徴量のスケールを合わせます。</p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">X</span> <span class="o">=</span> <span class="n">df</span><span class="p">.</span><span class="nf">copy</span><span class="p">()</span>
<span class="n">sc</span> <span class="o">=</span> <span class="n">preprocessing</span><span class="p">.</span><span class="nc">StandardScaler</span><span class="p">()</span>
<span class="n">sc</span><span class="p">.</span><span class="nf">fit</span><span class="p">(</span><span class="n">X</span><span class="p">)</span>
<span class="n">X_norm</span> <span class="o">=</span> <span class="n">sc</span><span class="p">.</span><span class="nf">transform</span><span class="p">(</span><span class="n">X</span><span class="p">)</span>
</code></pre></div></div> <p><br/></p> <p>クラスタリングをするための準備ができました。 k-meansクラスタリングは、いくつのクラスターに分類するかを前もって決めないといけない教師なし学習です。どれくらいのクラスター数が適当なのかをelbow法を用いて決めます。</p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">start</span><span class="p">,</span> <span class="n">end</span> <span class="o">=</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">30</span>
<span class="n">dist_list</span> <span class="o">=</span> <span class="p">[]</span>
<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="n">start</span><span class="p">,</span> <span class="n">end</span><span class="p">):</span>
    <span class="n">kmeans</span> <span class="o">=</span> <span class="nc">KMeans</span><span class="p">(</span><span class="n">n_clusters</span><span class="o">=</span><span class="n">i</span><span class="p">,</span> <span class="n">init</span><span class="o">=</span><span class="sh">'</span><span class="s">k-means++</span><span class="sh">'</span><span class="p">,</span> <span class="n">random_state</span><span class="o">=</span><span class="mi">7</span><span class="p">)</span>
    <span class="n">kmeans</span><span class="p">.</span><span class="nf">fit</span><span class="p">(</span><span class="n">X_norm</span><span class="p">)</span>
    <span class="n">dist_list</span><span class="p">.</span><span class="nf">append</span><span class="p">(</span><span class="n">kmeans</span><span class="p">.</span><span class="n">inertia_</span><span class="p">)</span>

<span class="n">plt</span><span class="p">.</span><span class="nf">plot</span><span class="p">(</span><span class="nf">range</span><span class="p">(</span><span class="n">start</span><span class="p">,</span> <span class="n">end</span><span class="p">),</span> <span class="n">dist_list</span><span class="p">,</span> <span class="n">marker</span><span class="o">=</span><span class="sh">'</span><span class="s">+</span><span class="sh">'</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">title</span><span class="p">(</span><span class="sh">'</span><span class="s">elbow method</span><span class="sh">'</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">xlabel</span><span class="p">(</span><span class="sh">'</span><span class="s">Number of clusters</span><span class="sh">'</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">ylabel</span><span class="p">(</span><span class="sh">'</span><span class="s">Distortion</span><span class="sh">'</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">show</span><span class="p">()</span>
</code></pre></div></div> <div class="row"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/assets/img/blog/2022/2022-10-26-elbow-480.webp"/> <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/assets/img/blog/2022/2022-10-26-elbow-800.webp"/> <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/assets/img/blog/2022/2022-10-26-elbow-1400.webp"/> <img src="/assets/img/blog/2022/2022-10-26-elbow.png" class="img-fluid rounded z-depth-1" width="auto" height="auto" title="example image" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> カクッと曲がり始めたところを目安にクラスター数を決める </div> <p><br/></p> <p>次に、elbow法で決めたクラスター数をもとにクラスタリングを行います。</p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># kmeansモデルの作成
</span><span class="n">kmeans</span> <span class="o">=</span> <span class="nc">KMeans</span><span class="p">(</span><span class="n">n_clusters</span><span class="o">=</span><span class="mi">5</span><span class="p">,</span> <span class="n">init</span><span class="o">=</span><span class="sh">'</span><span class="s">k-means++</span><span class="sh">'</span><span class="p">,</span> <span class="n">random_state</span><span class="o">=</span><span class="mi">7</span><span class="p">)</span>
<span class="c1"># クラスターの重心
</span><span class="n">result</span> <span class="o">=</span> <span class="n">kmeans</span><span class="p">.</span><span class="nf">fit</span><span class="p">(</span><span class="n">X_norm</span><span class="p">)</span>
</code></pre></div></div> <p><br/></p> <p>得られた結果は元のデータフレームと結合させます。</p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># クラスター番号の予測
</span><span class="n">y_pred</span> <span class="o">=</span> <span class="n">kmeans</span><span class="p">.</span><span class="nf">predict</span><span class="p">(</span><span class="n">X_norm</span><span class="p">)</span>

<span class="c1"># クラスター番号をpandasのSeriesで保持
</span><span class="n">labels</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="nc">Series</span><span class="p">(</span><span class="n">kmeans</span><span class="p">.</span><span class="n">labels_</span><span class="p">,</span> <span class="n">name</span><span class="o">=</span><span class="sh">'</span><span class="s">cluster</span><span class="sh">'</span><span class="p">)</span>
<span class="nf">print</span><span class="p">(</span><span class="n">labels</span><span class="p">.</span><span class="nf">value_counts</span><span class="p">(</span><span class="n">sort</span><span class="o">=</span><span class="bp">False</span><span class="p">))</span>

<span class="c1"># 元データにクラスター番号の結合
</span><span class="n">df_merge</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="nf">concat</span><span class="p">([</span><span class="n">df</span><span class="p">,</span> <span class="n">labels</span><span class="p">],</span> <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
</code></pre></div></div> <p><br/></p> <p><code class="language-plaintext highlighter-rouge">cluster</code>という列が追加されているか確認を行います。</p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">df_merge</span><span class="p">.</span><span class="nf">head</span><span class="p">()</span>
</code></pre></div></div> <div class="row"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/assets/img/blog/2022/2022-10-26-df_merge_head-480.webp"/> <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/assets/img/blog/2022/2022-10-26-df_merge_head-800.webp"/> <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/assets/img/blog/2022/2022-10-26-df_merge_head-1400.webp"/> <img src="/assets/img/blog/2022/2022-10-26-df_merge_head.png" class="img-fluid rounded z-depth-1" width="auto" height="auto" title="example image" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> 一番右に追加されている </div> <p><br/></p> <p>最後に、各クラスターはどういう特徴を持っているのかを確認します。</p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">fig</span><span class="p">,</span> <span class="n">axes</span> <span class="o">=</span> <span class="n">plt</span><span class="p">.</span><span class="nf">subplots</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">20</span><span class="p">,</span> <span class="mi">15</span><span class="p">))</span>

<span class="n">cols</span> <span class="o">=</span> <span class="n">df_merge</span><span class="p">.</span><span class="n">columns</span>
<span class="n">axes</span> <span class="o">=</span> <span class="n">axes</span><span class="p">.</span><span class="nf">ravel</span><span class="p">()</span>


<span class="k">for</span> <span class="n">col</span><span class="p">,</span> <span class="n">ax</span> <span class="ow">in</span> <span class="nf">zip</span><span class="p">(</span><span class="n">cols</span><span class="p">,</span> <span class="n">axes</span><span class="p">):</span>
    <span class="n">ax</span><span class="p">.</span><span class="nf">set_title</span><span class="p">(</span><span class="n">col</span><span class="p">)</span>
    <span class="n">sns</span><span class="p">.</span><span class="nf">violinplot</span><span class="p">(</span><span class="n">data</span><span class="o">=</span><span class="n">df_merge</span><span class="p">,</span> <span class="n">x</span><span class="o">=</span><span class="sh">"</span><span class="s">cluster</span><span class="sh">"</span><span class="p">,</span> <span class="n">y</span><span class="o">=</span><span class="n">col</span><span class="p">,</span> <span class="n">palette</span><span class="o">=</span><span class="sh">"</span><span class="s">pastel</span><span class="sh">"</span><span class="p">,</span> <span class="n">ax</span><span class="o">=</span><span class="n">ax</span><span class="p">)</span>

<span class="n">plt</span><span class="p">.</span><span class="nf">show</span><span class="p">()</span>
</code></pre></div></div> <div class="row"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/assets/img/blog/2022/2022-10-26-violin_standarized-480.webp"/> <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/assets/img/blog/2022/2022-10-26-violin_standarized-800.webp"/> <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/assets/img/blog/2022/2022-10-26-violin_standarized-1400.webp"/> <img src="/assets/img/blog/2022/2022-10-26-violin_standarized.png" class="img-fluid rounded z-depth-1" width="auto" height="auto" title="example image" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <p><br/> <br/></p> <h4 id="もし標準化を行わなかった場合">もし、標準化を行わなかった場合</h4> <p>座標空間上でデータ間の距離を用いているため、1つの特徴量のデータだけ絶対値が大きいとクラスタリングの結果に影響を与えてしまいます。</p> <div class="row"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/assets/img/blog/2022/2022-10-26-violin_raw-480.webp"/> <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/assets/img/blog/2022/2022-10-26-violin_raw-800.webp"/> <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/assets/img/blog/2022/2022-10-26-violin_raw-1400.webp"/> <img src="/assets/img/blog/2022/2022-10-26-violin_raw.png" class="img-fluid rounded z-depth-1" width="auto" height="auto" title="example image" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> 標準化を行わなかった場合 </div> <p><br/></p> <p>今回の場合、絶対値が最も大きかった<code class="language-plaintext highlighter-rouge">median_house_value</code>という特徴量によってクラスターの分類がされていることが、上図からわかります。</p> <p><code class="language-plaintext highlighter-rouge">median_income</code>は絶対値が小さいのに影響しているように見えます。しかし、高価な家に住んでいる人の収入は高いことが予想されるため、<code class="language-plaintext highlighter-rouge">median_income</code>は<code class="language-plaintext highlighter-rouge">median_house_value</code>の影響だと考えられます。</p> <p><br/></p>]]></content><author><name>hattyoriiiiiii</name></author><category term="機械学習"/><category term="Colaboratory"/><category term="DataScience"/><summary type="html"><![CDATA[K-meansクラスタリングの流れ]]></summary></entry><entry><title type="html">Webサイトに飛ぶQRコードを作成する</title><link href="https://hattyoriiiiiii.github.io/blog/2022/QRcode/" rel="alternate" type="text/html" title="Webサイトに飛ぶQRコードを作成する"/><published>2022-09-23T00:00:00+00:00</published><updated>2022-09-23T00:00:00+00:00</updated><id>https://hattyoriiiiiii.github.io/blog/2022/QRcode</id><content type="html" xml:base="https://hattyoriiiiiii.github.io/blog/2022/QRcode/"><![CDATA[<p><br/></p> <h3 id="やりたい事">やりたい事</h3> <ul> <li>以下のものを作りたい。</li> </ul> <div class="row"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/assets/img/blog/2022/2022-09-23-myurls-480.webp"/> <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/assets/img/blog/2022/2022-09-23-myurls-800.webp"/> <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/assets/img/blog/2022/2022-09-23-myurls-1400.webp"/> <img src="/assets/img/blog/2022/2022-09-23-myurls.png" class="img-fluid rounded z-depth-1" width="auto" height="auto" title="example image" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <p><br/></p> <h3 id="macのターミナルから実行">Macのターミナルから実行</h3> <p>Homebrewが既にインストールされている場合、<code class="language-plaintext highlighter-rouge">qrencode</code>をインストールします。</p> <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>brew <span class="nb">install </span>qrencode
</code></pre></div></div> <p><br/></p> <p>以下のコマンドでQRコードが作成できます。</p> <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">echo</span> <span class="s2">"https://hattyoriiiiiii.github.io"</span> | qrencode <span class="nt">-o</span> qrcode_github.png
</code></pre></div></div> <div class="row"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/assets/img/blog/2022/2022-09-23-qrencode_github-480.webp"/> <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/assets/img/blog/2022/2022-09-23-qrencode_github-800.webp"/> <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/assets/img/blog/2022/2022-09-23-qrencode_github-1400.webp"/> <img src="/assets/img/blog/2022/2022-09-23-qrencode_github.png" class="img-fluid rounded z-depth-1" width="auto" height="auto" title="example image" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <p>Pythonのライブラリである<a href="https://github.com/lincolnloop/python-qrcode"><code class="language-plaintext highlighter-rouge">qrcode</code></a>ではもっと柔軟に作れそうです。</p> <p><br/></p> <h3 id="pythonで実行">Pythonで実行</h3> <p>Google Colabからも作成することが可能です。</p> <p>まずは、<a href="https://github.com/logos">公式サイト</a>にアクセスしてアイコンをダウンロードします。 次に、Google Driveにドラッグ&amp;ドロップでアップロードします。</p> <p><br/></p> <div class="row"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/assets/img/blog/2022/2022-09-23-google_drive-480.webp"/> <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/assets/img/blog/2022/2022-09-23-google_drive-800.webp"/> <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/assets/img/blog/2022/2022-09-23-google_drive-1400.webp"/> <img src="/assets/img/blog/2022/2022-09-23-google_drive.png" class="img-fluid rounded z-depth-1" width="auto" height="auto" title="example image" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <p><br/></p> <p>Google Colabの使い方は、<a href="blog/2022/GoogleColab/">こちら</a>も参考にしてみてください。</p> <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">!</span>pip <span class="nb">install </span>qrcode
</code></pre></div></div> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="n">qrcode</span>
<span class="kn">from</span> <span class="n">qrcode.image.styledpil</span> <span class="kn">import</span> <span class="n">StyledPilImage</span>

<span class="n">qr</span> <span class="o">=</span> <span class="n">qrcode</span><span class="p">.</span><span class="nc">QRCode</span><span class="p">(</span><span class="n">error_correction</span> <span class="o">=</span> <span class="n">qrcode</span><span class="p">.</span><span class="n">constants</span><span class="p">.</span><span class="n">ERROR_CORRECT_H</span><span class="p">)</span>
<span class="n">qr</span><span class="p">.</span><span class="nf">add_data</span><span class="p">(</span><span class="sh">"</span><span class="s">https://hattyoriiiiiii.github.io</span><span class="sh">"</span><span class="p">)</span>

<span class="n">img</span> <span class="o">=</span> <span class="n">qr</span><span class="p">.</span><span class="nf">make_image</span><span class="p">(</span>
    <span class="n">image_factory</span> <span class="o">=</span> <span class="n">StyledPilImage</span><span class="p">,</span>
    <span class="n">embeded_image_path</span> <span class="o">=</span> <span class="sh">"</span><span class="s">/content/drive/MyDrive/blog/qrcode/dna_green.png</span><span class="sh">"</span>
<span class="p">)</span>
<span class="n">img</span><span class="p">.</span><span class="nf">save</span><span class="p">(</span><span class="sh">"</span><span class="s">/content/drive/MyDrive/blog/qrcode/qrcode_website.png</span><span class="sh">"</span><span class="p">)</span>
</code></pre></div></div> <div class="row"> <div class="col-sm-6 mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/assets/img/blog/2022/2022-09-23-qrcode_github-480.webp"/> <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/assets/img/blog/2022/2022-09-23-qrcode_github-800.webp"/> <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/assets/img/blog/2022/2022-09-23-qrcode_github-1400.webp"/> <img src="/assets/img/blog/2022/2022-09-23-qrcode_github.png" class="img-fluid rounded z-depth-1" width="auto" height="auto" title="example image" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <div class="col-sm-6 mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/assets/img/blog/2022/2022-09-23-qrcode_website-480.webp"/> <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/assets/img/blog/2022/2022-09-23-qrcode_website-800.webp"/> <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/assets/img/blog/2022/2022-09-23-qrcode_website-1400.webp"/> <img src="/assets/img/blog/2022/2022-09-23-qrcode_website.png" class="img-fluid rounded z-depth-1" width="auto" height="auto" title="example image" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <p><br/></p> <p>実際には、Google Colab内で、以下のように行いました。</p> <div class="row"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/assets/img/blog/2022/2022-09-23-google_colab-480.webp"/> <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/assets/img/blog/2022/2022-09-23-google_colab-800.webp"/> <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/assets/img/blog/2022/2022-09-23-google_colab-1400.webp"/> <img src="/assets/img/blog/2022/2022-09-23-google_colab.png" class="img-fluid rounded z-depth-1" width="auto" height="auto" title="example image" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <p><br/></p> <p>その後、inkscapeで少し編集して完成。</p> <div class="row"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/assets/img/blog/2022/2022-09-23-myurls-480.webp"/> <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/assets/img/blog/2022/2022-09-23-myurls-800.webp"/> <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/assets/img/blog/2022/2022-09-23-myurls-1400.webp"/> <img src="/assets/img/blog/2022/2022-09-23-myurls.png" class="img-fluid rounded z-depth-1" width="auto" height="auto" title="example image" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div>]]></content><author><name>hattyoriiiiiii</name></author><category term="tips"/><summary type="html"><![CDATA[Pythonライブラリのqrcodeを使って、オリジナルのQRコードを作成する]]></summary></entry><entry><title type="html">Google ColabでPythonファイルの編集とスクリプトの実行をする</title><link href="https://hattyoriiiiiii.github.io/blog/2022/GoogleColab/" rel="alternate" type="text/html" title="Google ColabでPythonファイルの編集とスクリプトの実行をする"/><published>2022-09-19T00:00:00+00:00</published><updated>2022-09-19T00:00:00+00:00</updated><id>https://hattyoriiiiiii.github.io/blog/2022/GoogleColab</id><content type="html" xml:base="https://hattyoriiiiiii.github.io/blog/2022/GoogleColab/"><![CDATA[<p><br/></p> <h3 id="概要">概要</h3> <ul> <li>Google Colabolatoryは、無料で簡単にPythonの実行環境が構築できるサービス。</li> <li>notebookを開いた状態で、Pythonファイルの作成・編集・実行ができる。</li> <li>ここでは説明のために、Google Driveに「Bioinfo2」というフォルダを作成する。</li> </ul> <p><br/></p> <h3 id="google-colabでpythonファイルの編集とスクリプトの実行をする">Google ColabでPythonファイルの編集とスクリプトの実行をする</h3> <p><br/></p> <ol> <li>新しいフォルダから、「Bioinfo2」を作成する。</li> <li>新しく出来た「Bioinfo2」をダブルクリックしてフォルダ内に入る。</li> <li>「その他」→「Google Colabolatory」から新しいnotebookを作成する。</li> </ol> <p><br/></p> <div class="row"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/assets/img/blog/2022/2022-09-19-GoogleColab_01-480.webp"/> <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/assets/img/blog/2022/2022-09-19-GoogleColab_01-800.webp"/> <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/assets/img/blog/2022/2022-09-19-GoogleColab_01-1400.webp"/> <img src="/assets/img/blog/2022/2022-09-19-GoogleColab_01.png" class="img-fluid rounded z-depth-1" width="auto" height="auto" title="example image" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> まずはnotebookを作成する。 </div> <p><br/></p> <ol> <li value="4"> フォルダマークをクリックする。 </li> <li> Google Driveのマークをクリックして、接続の許可を行う。初めて実行する場合は、<code>from google.colab import drive</code>から始まるコードが出てくるので、再生ボタンを押す(コードの実行)。許可を求められるので、アクセスの許可をする(<a href="https://www.google.com/url?sa=t&amp;rct=j&amp;q=&amp;esrc=s&amp;source=web&amp;cd=&amp;ved=2ahUKEwjeppid7aD6AhUNAt4KHUhwAKIQFnoECAoQAQ&amp;url=https%3A%2F%2Faiacademy.jp%2Fmedia%2F%3Fp%3D1460&amp;usg=AOvVaw2gTDOA1cmHqTNAbl3li3AM">こちらのサイト</a>も参考にしてみて下さい)。 </li> <li> 「Bioinfo2」の右側に出てくる「…」を90度回転させたボタンを押して新しいファイルを作成する。 </li> <li>⑥で作成した「<code>~.py</code>」という名前のファイルをダブルクリックする。</li> </ol> <p><br/></p> <div class="row"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/assets/img/blog/2022/2022-09-19-GoogleColab_02-480.webp"/> <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/assets/img/blog/2022/2022-09-19-GoogleColab_02-800.webp"/> <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/assets/img/blog/2022/2022-09-19-GoogleColab_02-1400.webp"/> <img src="/assets/img/blog/2022/2022-09-19-GoogleColab_02.png" class="img-fluid rounded z-depth-1" width="auto" height="auto" title="example image" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> 次にPythonファイルを作成する。 </div> <p><br/></p> <ol> <li value="8"> 右側にダブルクリックしたPythonファイルが開かれる。 </li> <li> <code>!python3 /content/drive/MyDrive/Bioinfo2/ファイル名.py</code>(<code>!python3</code>の後に半角の空白が1個入る)と打って再生ボタンを押す。 <ul> <li> 上手くいかない場合は、「…」が90度 回転したボタンを押して、「パスをコピー」。「!python3」+「半角の空白1個」そしてペーストする。 </li> <li> もしくは、<code>cd /content/drive/MyDrive/Bioinfo2</code>をセルの中で実行した後、<code>!python3 ファイル名.py</code>を実行する。 </li> </ul> </li> </ol> <p><br/></p> <div class="row"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/assets/img/blog/2022/2022-09-19-GoogleColab_03-480.webp"/> <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/assets/img/blog/2022/2022-09-19-GoogleColab_03-800.webp"/> <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/assets/img/blog/2022/2022-09-19-GoogleColab_03-1400.webp"/> <img src="/assets/img/blog/2022/2022-09-19-GoogleColab_03.png" class="img-fluid rounded z-depth-1" width="auto" height="auto" title="example image" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> Pythonファイルを編集して、実行する。 </div>]]></content><author><name>hattyoriiiiiii</name></author><category term="環境構築"/><category term="Colaboratory"/><category term="tips"/><summary type="html"><![CDATA[notebookを開きながらPythonファイルの編集ができる]]></summary></entry><entry><title type="html">Macで「システムデータ」を減らして空き容量を確保する</title><link href="https://hattyoriiiiiii.github.io/blog/2022/Storage/" rel="alternate" type="text/html" title="Macで「システムデータ」を減らして空き容量を確保する"/><published>2022-08-14T00:00:00+00:00</published><updated>2022-08-14T00:00:00+00:00</updated><id>https://hattyoriiiiiii.github.io/blog/2022/Storage</id><content type="html" xml:base="https://hattyoriiiiiii.github.io/blog/2022/Storage/"><![CDATA[<p><br/></p> <h3 id="問題">問題</h3> <ul> <li>気付いたらストレージが数百 MBまで圧迫。</li> <li>こまめにファイルを消すことを繰り返していた。</li> <li>この時、「システムデータ」が100 GB以上となっていたが、原因は不明。</li> </ul> <div class="row"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/assets/img/blog/2022/2022-08-14-MacStorage-480.webp"/> <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/assets/img/blog/2022/2022-08-14-MacStorage-800.webp"/> <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/assets/img/blog/2022/2022-08-14-MacStorage-1400.webp"/> <img src="/assets/img/blog/2022/2022-08-14-MacStorage.png" class="img-fluid rounded z-depth-1" width="auto" height="auto" title="example image" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> これは解決した後に撮影したもの。 </div> <p><br/></p> <h3 id="解決策">解決策</h3> <ol> <li>BuhoCleanerで原因を探ってみたところ、<code class="language-plaintext highlighter-rouge">Docker.raw</code>というファイルが64 GB近く取っていることが発覚</li> </ol> <div class="row"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/assets/img/blog/2022/2022-08-14-BuhoCleaner-480.webp"/> <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/assets/img/blog/2022/2022-08-14-BuhoCleaner-800.webp"/> <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/assets/img/blog/2022/2022-08-14-BuhoCleaner-1400.webp"/> <img src="/assets/img/blog/2022/2022-08-14-BuhoCleaner.png" class="img-fluid rounded z-depth-1" width="auto" height="auto" title="example image" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> 無料版を利用している。 </div> <ol> <li>Disk image sizeを「64 GB → 16 GB」に変更したところ、110 GBくらい大きかったシステムデータが50 GB程度まで減少。</li> </ol> <div class="row"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/assets/img/blog/2022/2022-08-14-DockerResources-480.webp"/> <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/assets/img/blog/2022/2022-08-14-DockerResources-800.webp"/> <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/assets/img/blog/2022/2022-08-14-DockerResources-1400.webp"/> <img src="/assets/img/blog/2022/2022-08-14-DockerResources.png" class="img-fluid rounded z-depth-1" width="auto" height="auto" title="example image" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> 既定の容量を先に確保していたっぽい。 </div> <p><br/></p>]]></content><author><name>hattyoriiiiiii</name></author><category term="Docker"/><category term="tips"/><summary type="html"><![CDATA[Dockerの意外な落とし穴]]></summary></entry><entry><title type="html">100 Programにて「Mobile trash can」を発表しました</title><link href="https://hattyoriiiiiii.github.io/blog/2022/100P/" rel="alternate" type="text/html" title="100 Programにて「Mobile trash can」を発表しました"/><published>2022-03-24T00:00:00+00:00</published><updated>2022-03-24T00:00:00+00:00</updated><id>https://hattyoriiiiiii.github.io/blog/2022/100P</id><content type="html" xml:base="https://hattyoriiiiiii.github.io/blog/2022/100P/"><![CDATA[<p><br/></p> <p>2/10 ~ 3/24の6週間、<a href="https://100.todaitotexas.com">「100 Program」</a>に参加しました。</p> <p>音声に反応して移動してくるゴミ箱を作りました。作品名は、「自立移動ゴミ箱」。</p> <p><br/></p> <div class="row"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/assets/img/mobile_trash_can_summary-480.webp"/> <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/assets/img/mobile_trash_can_summary-800.webp"/> <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/assets/img/mobile_trash_can_summary-1400.webp"/> <img src="/assets/img/mobile_trash_can_summary.png" class="img-fluid rounded z-depth-1" width="auto" height="auto" title="example image" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <p><br/></p> <h2 id="ゴミを捨てに行くのがめんどくさい">ゴミを捨てに行くのがめんどくさい</h2> <p><br/></p> <p>ゴミ箱は家の中の片隅にあるだけで、赤枠で示したような、自分の普段行動する範囲にはあまり置いていない場合が多いと思います。</p> <p>家具の配置を考慮すると、ゴミ箱は家の片隅に追いやられる事が多い存在です。</p> <p>「パッと出たゴミをポイッと捨てることができないのがだるい」これが課題です。</p> <div class="row"> <div class="col-sm-6 mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/assets/img/mobile_trash_can_intro2left-480.webp"/> <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/assets/img/mobile_trash_can_intro2left-800.webp"/> <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/assets/img/mobile_trash_can_intro2left-1400.webp"/> <img src="/assets/img/mobile_trash_can_intro2left.png" class="img-fluid rounded z-depth-1" width="auto" height="auto" title="example image" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <div class="col-sm-6 mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/assets/img/mobile_trash_can_intro2right-480.webp"/> <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/assets/img/mobile_trash_can_intro2right-800.webp"/> <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/assets/img/mobile_trash_can_intro2right-1400.webp"/> <img src="/assets/img/mobile_trash_can_intro2right.png" class="img-fluid rounded z-depth-1" width="auto" height="auto" title="example image" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="row"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/assets/img/mobile_trash_can_intro-480.webp"/> <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/assets/img/mobile_trash_can_intro-800.webp"/> <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/assets/img/mobile_trash_can_intro-1400.webp"/> <img src="/assets/img/mobile_trash_can_intro.png" class="img-fluid rounded z-depth-1" width="auto" height="auto" title="example image" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> ゴミ箱に向かって投げて外したことがあるはず </div> <p><br/></p> <h2 id="技術面">技術面</h2> <p><br/></p> <p>音声認識、自己位置推定と移動、画像認識という技術を使って自分のところまで移動してくるゴミ箱を作成しました。</p> <p>まず、「ゴミ箱」という音声に反応して、ゴミ箱が移動を開始します。 次に、LIDARという機器を用いる事で部屋の地図を作成し、ゴミ箱がどこにいるのかを認識しています。</p> <p>さらに、カメラを用いることで人の顔や下半身などに反応して目的地まで移動します。</p> <p>現在は全体を通したデバイスの完成はしていませんが、それぞれの動作確認までが完了しています。</p> <hr/> <ul> <li>音声認識 <ul> <li>webカメラが音声も拾ってくれました。</li> <li><code class="language-plaintext highlighter-rouge">PyAudio</code>、<code class="language-plaintext highlighter-rouge">SpeechRecognition</code>、<code class="language-plaintext highlighter-rouge">Julius</code>を使って単語を認識します。</li> </ul> </li> <li>自己位置推定と移動 (SLAM) <ul> <li>LIDARにはRPLIDAR A1 M8を用いました。</li> <li>navigationは<code class="language-plaintext highlighter-rouge">cartographer</code>を利用</li> <li><code class="language-plaintext highlighter-rouge">rosserial</code>を使用することで、Arduinoが生成された<code class="language-plaintext highlighter-rouge">cmd_vel</code>を受け取り、メカナムホイールを制御しています。</li> </ul> </li> <li>画像認識 <ul> <li>一般的なwebカメラを用いました。</li> <li>用いたライブラリは<code class="language-plaintext highlighter-rouge">OpenCV</code>です。</li> </ul> </li> </ul> <p><br/></p> <div class="row"> <div class="col-sm-8 mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/assets/img/mobile_trash_can_hardware-480.webp"/> <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/assets/img/mobile_trash_can_hardware-800.webp"/> <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/assets/img/mobile_trash_can_hardware-1400.webp"/> <img src="/assets/img/mobile_trash_can_hardware.png" class="img-fluid rounded z-depth-1" width="auto" height="auto" title="example image" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <p><br/></p>]]></content><author><name>hattyoriiiiiii</name></author><category term="raspberrypi"/><summary type="html"><![CDATA[]]></summary></entry></feed>